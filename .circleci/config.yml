# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  testcases:
    working_directory: ~/workspace

    docker:
      # Specify the version you desire here
      # - image: circleci/php:7.3-node-browsers

      - image: circleci/php:7.3-apache-node-browsers
      - image: circleci/mysql:5.7

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    environment:
      - APP_NAME: 継続的インテグレーション祭
      - APP_DEBUG: true
      - APP_ENV: testing
      - APP_KEY: base64:xWEI4OS7YZ0rIxmMfJaAgbRiMkOkFsf5Bn1QEO+iP4k=
      - DB_CONNECTION: circle_test
      - MYSQL_ALLOW_EMPTY_PASSWORD: true
      - PORTAL_ADMIN_NAME: 継続的インテグレーション実行委員会
      - PORTAL_CONTACT_EMAIL: info@example.com
      - PORTAL_UNIVEMAIL_DOMAIN: univemail.example.com
      - PORTAL_UPLOAD_DIR_CRUD:

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip

      # PHP
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - run: composer phpcs

      - run: sudo docker-php-ext-install pdo_mysql

      - run: ./vendor/bin/phpunit

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # Frontend Assets
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-

      - run: yarn install

      - run: yarn eslint-check

      - run: yarn stylelint-check

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      # prepare the database
      # - run: touch storage/testing.sqlite
      # - run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # - run: ./vendor/bin/codecept build
      # - run: ./vendor/bin/codecept run

  deploy:
    working_directory: ~/workspace

    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-node-browsers

    steps:
      - checkout

      - run: sudo apt update
      - run: sudo apt install rsync

      - run: bash sakura_deploy.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - testcases
      - deploy:
          requires:
            - testcases
          filters:
            branches:
              only: master
